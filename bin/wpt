#!/usr/bin/env node


var args = require('argsparser').parse();
var fs = require('fs');
var path = require('path');
var WPT = require('../');
var winston = require("winston");
var async = require("async");
var str = require("str.js");
var Splunk = require('../lib/splunk').Splunk;
var cwd = process.cwd();

var config = (function(file) {
  var json = fs.readFileSync(file);
  return JSON.parse(json);
}(args['--config'] || path.join(cwd, 'config.json')));


var transports = [
  //new (winston.transports.Console)()
];

if (config.transports.splunk) {
  transports.push(new Splunk(config.transports.splunk));
}

var infoLog = new (winston.Logger)({
  transports: [
    new (winston.transports.Console)()
  ]
});

var dataLog = new (winston.Logger)({
  transports: transports 
});

var wpt = new WPT(config.apikey);

wpt.on("startTest", function(options, data) {
  infoLog.info(str.format("Test Started: {url} {id}", { url: options.url, id: data.data.testId }));
});

wpt.on("endTest", function(testResult) {
  infoLog.info(str.format("Test Complete: {url} {id} {summary}", { url: testResult.testUrl, id: testResult.testId, summary: testResult.summar }));
  dataLog.info("testResult", {
    testId: testResult.testId,
    summary: testResult.summary,
    url: testResult.testUrl,
    completed: new Date(testResult.completed).getTime(),
    firstView: testResult.run.firstView.results,
    repeatView: testResult.run.repeatView.results
  });
});

infoLog.info("Starting batch, this may take awhile");
var runBatch = function() {
  wpt.runBatch(config.urls);
};
//runBatch();
wpt.getResults("110614_6A_TW3Q");

